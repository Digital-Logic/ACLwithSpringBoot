plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'org.liquibase.gradle' version '2.0.3'
}

group = 'net.digitallogic'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
def mapStructVersion = '1.3.1.Final'


def props = new Properties()
file("application.properties").withInputStream({ props.load(it) })

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.security:spring-security-acl'
	implementation 'net.sf.ehcache:ehcache:2.10.6'
	implementation 'org.springframework:spring-context-support'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'org.liquibase:liquibase-core:3.8.9'

	liquibaseRuntime 'org.liquibase:liquibase-core:3.8.9'
	liquibaseRuntime 'mysql:mysql-connector-java'
	liquibaseRuntime 'javax.xml.bind:jaxb-api:2.3.1'
	liquibaseRuntime("ch.qos.logback:logback-core")
	liquibaseRuntime("ch.qos.logback:logback-classic")


	compileOnly 'org.projectlombok:lombok'
	compileOnly "org.mapstruct:mapstruct:${mapStructVersion}"

	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
}

processResources {
	expand(props)
}

liquibase {
	activities {
		main {
			changeLogFile 'src/main/resources/db/changelog-master.xml'
			url props.getProperty("datasource_url")
			username props.getProperty("datasource_username")
			password props.getProperty("datasource_password")
		}
	}
}

test {
	useJUnitPlatform()
}
